// ExemploUsoArquiteturaModular.cs - Demonstra como usar a nova arquitetura
using Dashboard.ViewModels;
using Dashboard.ViewModels.Services;
using System;
using System.Threading.Tasks;

namespace Dashboard.Exemplos
{
    /// <summary>
    /// Exemplo pr√°tico de como usar a nova arquitetura modular
    /// Demonstra a facilidade de uso e extensibilidade
    /// </summary>
    public class ExemploUsoArquiteturaModular
    {
        #region Exemplo 1: Uso B√°sico
        /// <summary>
        /// Exemplo b√°sico: criar ViewModel principal e usar funcionalidades
        /// </summary>
        public static async Task ExemploBasicoAsync()
        {
            Console.WriteLine("üìö EXEMPLO 1: USO B√ÅSICO DA ARQUITETURA");
            Console.WriteLine("=" * 50);

            // 1. Carregar dados hist√≥ricos (como sempre)
            var historico = Infra.CarregarConcursos();

            // 2. Criar ViewModel principal (MUITO MAIS SIMPLES AGORA!)
            var mainViewModel = new MainWindowViewModel(historico);

            // 3. Aguardar inicializa√ß√£o
            Console.WriteLine("üîÑ Inicializando sistema...");
            // A inicializa√ß√£o √© autom√°tica no construtor, mas pode aguardar se necess√°rio

            // 4. Usar funcionalidades via ViewModels especializados
            Console.WriteLine("üìä Acessando modelos de predi√ß√£o...");
            var predictionVM = mainViewModel.PredictionModels;

            Console.WriteLine($"‚úÖ Modelos dispon√≠veis: {predictionVM.AvailableModels.Count}");
            Console.WriteLine($"üéØ Modelo selecionado: {predictionVM.SelectedModel?.Name ?? "Nenhum"}");

            // 5. Gerar predi√ß√£o (MUITO SIMPLES!)
            predictionVM.TargetConcurso = "3010";

            Console.WriteLine("üöÄ Gerando predi√ß√£o...");
            await predictionVM.GeneratePrediction();

            Console.WriteLine($"üìã Resultado: {predictionVM.LastPredictionResult}");
            Console.WriteLine($"üéØ Confian√ßa: {predictionVM.SelectedModelConfidence:P2}");

            Console.WriteLine("\n‚úÖ Exemplo b√°sico conclu√≠do!");
        }
        #endregion

        #region Exemplo 2: Compara√ß√£o de Modelos
        /// <summary>
        /// Exemplo avan√ßado: comparar m√∫ltiplos modelos
        /// </summary>
        public static async Task ExemploComparacaoModelosAsync()
        {
            Console.WriteLine("\nüìö EXEMPLO 2: COMPARA√á√ÉO DE MODELOS");
            Console.WriteLine("=" * 50);

            var historico = Infra.CarregarConcursos();
            var mainViewModel = new MainWindowViewModel(historico);

            // Acessar ViewModel de compara√ß√£o
            var comparisonVM = mainViewModel.Comparison;

            Console.WriteLine("üîç Preparando compara√ß√£o...");

            // Adicionar modelos para compara√ß√£o
            foreach (var modelType in comparisonVM.AvailableModelsForComparison)
            {
                comparisonVM.AddModelToComparison(modelType);
                Console.WriteLine($"‚ûï Adicionado: {modelType}");
            }

            // Definir concurso alvo
            comparisonVM.TargetConcursoForComparison = "3011";

            // Executar compara√ß√£o
            Console.WriteLine("‚öîÔ∏è Comparando modelos...");
            await comparisonVM.CompareSelectedModels();

            // Exibir resultados
            Console.WriteLine($"üìä {comparisonVM.ComparisonSummary}");

            foreach (var comparison in comparisonVM.Comparisons)
            {
                Console.WriteLine($"üîÑ {comparison.Model1Name} vs {comparison.Model2Name}:");
                Console.WriteLine($"   üìà Diversifica√ß√£o: {comparison.DiversificationRate:P2}");
                Console.WriteLine($"   üîó N√∫meros comuns: {comparison.CommonNumbers}/15");
            }

            Console.WriteLine("\n‚úÖ Exemplo de compara√ß√£o conclu√≠do!");
        }
        #endregion

        #region Exemplo 3: Valida√ß√£o Completa
        /// <summary>
        /// Exemplo de valida√ß√£o: testar performance dos modelos
        /// </summary>
        public static async Task ExemploValidacaoCompletaAsync()
        {
            Console.WriteLine("\nüìö EXEMPLO 3: VALIDA√á√ÉO COMPLETA");
            Console.WriteLine("=" * 50);

            var historico = Infra.CarregarConcursos();
            var mainViewModel = new MainWindowViewModel(historico);

            // Acessar ViewModel de valida√ß√£o
            var validationVM = mainViewModel.Validation;

            Console.WriteLine("üß™ Iniciando valida√ß√£o completa...");

            // Executar valida√ß√£o completa
            await validationVM.RunFullValidation();

            // Exibir resultados
            Console.WriteLine($"üìä {validationVM.LastValidationSummary}");
            Console.WriteLine($"üéØ Accuracy geral: {validationVM.OverallAccuracy:P2}");
            Console.WriteLine($"‚úÖ Testes aprovados: {validationVM.PassedTests}/{validationVM.TotalTests}");

            // Exibir detalhes dos testes
            Console.WriteLine("\nüìã Detalhes dos testes:");
            foreach (var result in validationVM.ValidationResults)
            {
                var status = result.Success ? "‚úÖ" : "‚ùå";
                Console.WriteLine($"   {status} {result.TestName}: {result.Message}");
            }

            Console.WriteLine("\n‚úÖ Exemplo de valida√ß√£o conclu√≠do!");
        }
        #endregion

        #region Exemplo 4: Configura√ß√£o Avan√ßada
        /// <summary>
        /// Exemplo de configura√ß√£o: personalizar par√¢metros dos modelos
        /// </summary>
        public static async Task ExemploConfiguracaoAvancadaAsync()
        {
            Console.WriteLine("\nüìö EXEMPLO 4: CONFIGURA√á√ÉO AVAN√áADA");
            Console.WriteLine("=" * 50);

            var historico = Infra.CarregarConcursos();
            var mainViewModel = new MainWindowViewModel(historico);

            var predictionVM = mainViewModel.PredictionModels;

            // Selecionar modelo configur√°vel
            var configurableModel = predictionVM.AvailableModels
                .FirstOrDefault(m => m.IsConfigurable);

            if (configurableModel != null)
            {
                predictionVM.SelectedModel = configurableModel;

                Console.WriteLine($"‚öôÔ∏è Configurando modelo: {configurableModel.Name}");

                // Carregar configura√ß√£o
                predictionVM.LoadModelConfiguration();

                // Mostrar par√¢metros atuais
                Console.WriteLine("üìã Par√¢metros atuais:");
                foreach (var param in predictionVM.SelectedModelParameters)
                {
                    Console.WriteLine($"   üîß {param.Key}: {param.Value}");
                }

                // Modificar par√¢metros
                if (predictionVM.SelectedModelParameters.ContainsKey("JanelaHistorica"))
                {
                    predictionVM.SelectedModelParameters["JanelaHistorica"] = 150;
                    Console.WriteLine("‚úèÔ∏è Modificado JanelaHistorica para 150");
                }

                // Aplicar mudan√ßas
                predictionVM.UpdateModelParameters();
                Console.WriteLine("‚úÖ Par√¢metros atualizados");

                // Testar com nova configura√ß√£o
                predictionVM.TargetConcurso = "3012";
                await predictionVM.GeneratePrediction();

                Console.WriteLine($"üéØ Predi√ß√£o com nova configura√ß√£o: {predictionVM.LastPredictionResult}");
            }
            else
            {
                Console.WriteLine("‚ö†Ô∏è Nenhum modelo configur√°vel dispon√≠vel");
            }

            Console.WriteLine("\n‚úÖ Exemplo de configura√ß√£o conclu√≠do!");
        }
        #endregion

        #region Exemplo 5: Uso de Notifications
        /// <summary>
        /// Exemplo de notifica√ß√µes: usar sistema de notifica√ß√µes
        /// </summary>
        public static async Task ExemploNotificacoesAsync()
        {
            Console.WriteLine("\nüìö EXEMPLO 5: SISTEMA DE NOTIFICA√á√ïES");
            Console.WriteLine("=" * 50);

            // Usar servi√ßo de notifica√ß√µes (singleton)
            var notificationService = UINotificationService.Instance;

            Console.WriteLine("üì¢ Testando diferentes tipos de notifica√ß√£o...");

            // Simular notifica√ß√µes (em aplica√ß√£o real, seria MessageBox)
            Console.WriteLine("üîî Simulando notifica√ß√£o de sucesso...");
            // notificationService.ShowSuccess("Predi√ß√£o gerada com sucesso!");

            Console.WriteLine("üîî Simulando notifica√ß√£o de aviso...");
            // notificationService.ShowWarning("Modelo ainda n√£o foi treinado");

            Console.WriteLine("üîî Simulando notifica√ß√£o de erro...");
            // notificationService.ShowError("Erro ao carregar dados hist√≥ricos");

            Console.WriteLine("üîî Simulando pergunta de confirma√ß√£o...");
            // var confirmed = notificationService.AskConfirmation("Deseja continuar com a valida√ß√£o?");

            Console.WriteLine("‚úÖ Exemplos de notifica√ß√£o demonstrados!");

            // Mostrar como ViewModels usam automaticamente
            var historico = Infra.CarregarConcursos();
            var mainViewModel = new MainWindowViewModel(historico);

            Console.WriteLine("\nü§ñ ViewModels usam notifica√ß√µes automaticamente:");
            Console.WriteLine("   - Erros s√£o mostrados via ShowError()");
            Console.WriteLine("   - Sucessos s√£o mostrados via ShowSuccess()");
            Console.WriteLine("   - Confirma√ß√µes s√£o solicitadas via AskConfirmation()");

            Console.WriteLine("\n‚úÖ Exemplo de notifica√ß√µes conclu√≠do!");
        }
        #endregion

        #region Exemplo 6: Extensibilidade - Novo ViewModel
        /// <summary>
        /// Exemplo de extensibilidade: como adicionar novo ViewModel facilmente
        /// </summary>
        public static async Task ExemploExtensibilidadeAsync()
        {
            Console.WriteLine("\nüìö EXEMPLO 6: EXTENSIBILIDADE - NOVO VIEWMODEL");
            Console.WriteLine("=" * 50);

            Console.WriteLine("üîß Como adicionar novo ViewModel especializado:");
            Console.WriteLine();

            Console.WriteLine("1Ô∏è‚É£ CRIAR NOVA CLASSE:");
            Console.WriteLine("   üìÅ Dashboard/ViewModels/Specialized/ReportsViewModel.cs");
            Console.WriteLine("   üèóÔ∏è Herdar de ModelOperationBase");
            Console.WriteLine("   ‚öôÔ∏è Implementar funcionalidades espec√≠ficas");
            Console.WriteLine();

            Console.WriteLine("2Ô∏è‚É£ ADICIONAR NA FACTORY:");
            Console.WriteLine("   üìù ViewModelFactory.CreateReportsViewModel()");
            Console.WriteLine("   üîó M√©todo para criar singleton");
            Console.WriteLine();

            Console.WriteLine("3Ô∏è‚É£ INTEGRAR NO MAINWINDOWVIEWMODEL:");
            Console.WriteLine("   üìä public ReportsViewModel Reports { get; }");
            Console.WriteLine("   üöÄ Reports = _viewModelFactory.CreateReportsViewModel();");
            Console.WriteLine();

            Console.WriteLine("4Ô∏è‚É£ ATUALIZAR XAML:");
            Console.WriteLine("   üñºÔ∏è Adicionar controles para novo ViewModel");
            Console.WriteLine("   üîó Bindings: {Binding Reports.MinhaPropriedade}");
            Console.WriteLine();

            Console.WriteLine("5Ô∏è‚É£ RESULTADO:");
            Console.WriteLine("   ‚úÖ Novo ViewModel integrado sem modificar c√≥digo existente");
            Console.WriteLine("   ‚úÖ Zero risco de quebrar funcionalidades atuais");
            Console.WriteLine("   ‚úÖ Testes unit√°rios independentes poss√≠veis");
            Console.WriteLine("   ‚úÖ Manuten√ß√£o isolada e simples");

            Console.WriteLine("\nüöÄ VANTAGEM DA ARQUITETURA MODULAR:");
            Console.WriteLine("   ‚è∞ Tempo para adicionar: 30-60 minutos");
            Console.WriteLine("   üõ°Ô∏è Risco de bugs: ZERO");
            Console.WriteLine("   üß™ Testabilidade: ALTA");
            Console.WriteLine("   üìà Manutenibilidade: EXCELENTE");

            Console.WriteLine("\n‚úÖ Exemplo de extensibilidade conclu√≠do!");
        }
        #endregion

        #region Exemplo Principal
        /// <summary>
        /// Executa todos os exemplos
        /// </summary>
        public static async Task Main(string[] args)
        {
            Console.WriteLine("üéì EXEMPLOS PR√ÅTICOS - ARQUITETURA MODULAR");
            Console.WriteLine("=" * 60);
            Console.WriteLine("üìñ Demonstrando facilidade de uso e poder da nova arquitetura");
            Console.WriteLine();

            try
            {
                await ExemploBasicoAsync();
                await ExemploComparacaoModelosAsync();
                await ExemploValidacaoCompletaAsync();
                await ExemploConfiguracaoAvancadaAsync();
                await ExemploNotificacoesAsync();
                await ExemploExtensibilidadeAsync();

                Console.WriteLine("\n" + "=" * 60);
                Console.WriteLine("üéâ TODOS OS EXEMPLOS EXECUTADOS COM SUCESSO!");
                Console.WriteLine();
                Console.WriteLine("üöÄ PR√ìXIMOS PASSOS:");
                Console.WriteLine("   1. Implementar StatisticalDebtModel (f√°cil!)");
                Console.WriteLine("   2. Adicionar SaturationModel (simples!)");
                Console.WriteLine("   3. Criar PendularOscillatorModel (direto!)");
                Console.WriteLine("   4. Desenvolver EnsembleModel (sem complica√ß√£o!)");
                Console.WriteLine();
                Console.WriteLine("üí° LEMBRE-SE:");
                Console.WriteLine("   ‚úÖ Cada modelo novo = apenas uma classe");
                Console.WriteLine("   ‚úÖ Zero modifica√ß√£o do c√≥digo existente");
                Console.WriteLine("   ‚úÖ Testes unit√°rios independentes");
                Console.WriteLine("   ‚úÖ Manuten√ß√£o simplificada");
                Console.WriteLine();
                Console.WriteLine("üéØ A ARQUITETURA MODULAR ACELERA O DESENVOLVIMENTO!");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"\n‚ùå ERRO NOS EXEMPLOS: {ex.Message}");
                Console.WriteLine("üîß Verifique se a migra√ß√£o foi implementada corretamente");
            }

            Console.WriteLine("\nPressione qualquer tecla para continuar...");
            Console.ReadKey();
        }
        #endregion
    }
}

